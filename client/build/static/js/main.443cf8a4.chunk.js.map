{"version":3,"sources":["config.js","redux/actions.js","components/LoginCard.js","containers/Login.js","components/FormMessage.js","containers/Form.js","components/ListUsers.js","containers/Users.js","components/Message.js","components/ContentMessages.js","containers/Messages.js","components/RoomChat.js","containers/Chat.js","components/App.js","redux/reducers.js","redux/store.js","index.js"],"names":["config","API_URL","SOCKET_URL","ERROR","LOGIN_USER","LOGOUT_USER","LIST_USERS","ADD_USER","REMOVE_USER","SEND_MESSAGE","ADD_MESSAGE","UPDATE_MESSAGE","REMOVE_MESSAGE","GET_MESSAGES","getMessages","dispatch","fetch","concat","headers","Content-Type","then","response","json","data","error","type","messages","LoginCard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","nickname","handleSubmit","bind","assertThisInitialized","handleChange","handleKeyDown","event","preventDefault","onLogin","toLowerCase","setState","target","value","keyCode","user","isLogIn","react_default","a","createElement","react_router","to","lib","className","textClassName","title","s","onSubmit","offset","inputClassName","label","onChange","onKeyDown","large","waves","React","Component","Login","connect","method","body","JSON","stringify","FormMessage","message","date","youtube","length","sendMessage","socket","emit","endsWith","validate","success","searchFailed","data-length","Form","Date","toISOString","ListUsers","handleClick","getUsers","e","logoutUser","close","_this2","header","users","map","key","href","onClick","Users","Message","formatDate","result","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","YouTube","videoId","opts","width","height","ContentMessages","scrollDown","chatMessages","document","querySelector","scrollTop","scrollHeight","index","components_Message","Messages","RoomChat","endpoint","fail","client","on","addUser","removeUser","addMessage","update","updateMessage","removeMessage","containers_Messages","containers_Users","containers_Form","Chat","App","react_router_dom","path","exact","component","combineReducers","arguments","undefined","action","assign","Array","from","find","toConsumableArray","filter","item","msg","copy","pop","persistConfig","storage","persitedReducer","persistReducer","reducers","store","createStore","applyMiddleware","thunk","persistor","persistStore","getStore","ReactDOM","render","es","integration_react","loading","components_App","getElementById"],"mappings":"uNAKeA,EALA,CACbC,QAAmD,oCACnDC,WAAsD,qCCC3CC,EAAQ,QACRC,EAAa,aACbC,EAAc,cACdC,EAAa,aACbC,EAAW,WACXC,EAAc,cACdC,EAAe,eACfC,EAAc,cACdC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAe,eAkErB,IAAMC,EAAc,kBAAM,SAACC,GAChCC,MAAK,GAAAC,OAAIjB,EAAOC,QAAX,aAA+B,CAClCiB,QAAS,CAAEC,eAAgB,sBAC1BC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAAQF,KAAK,SAAAG,GACpCA,EAAKC,MACPT,EAAS,CAAEU,KAAMtB,EAAOqB,MAAOD,EAAKC,SAEpCT,EAAS,CAAEU,KAAMtB,EAAOqB,MAAO,KAC/BT,EAAS,CAAEU,KAAMZ,EAAca,SAAUH,0DCtBhCI,cA5Db,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXC,SAAU,IAEZR,EAAKS,aAAeT,EAAKS,aAAaC,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IACpBA,EAAKY,aAAeZ,EAAKY,aAAaF,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IACpBA,EAAKa,cAAgBb,EAAKa,cAAcH,KAAnBT,OAAAU,EAAA,EAAAV,CAAAD,IARJA,4EAULc,GACZA,EAAMC,iBAEFZ,KAAKI,MAAMC,UAAUL,KAAKJ,MAAMiB,QAAQb,KAAKI,MAAMC,SAASS,eAEhEd,KAAKe,SAAS,CAAEV,SAAU,0CAEdM,GACZX,KAAKe,SAAS,CACZV,SAAUM,EAAMK,OAAOC,8CAGZN,GACS,KAAlBA,EAAMO,SAAgBP,EAAMC,kDAIhC,OAAIZ,KAAKJ,MAAMuB,KAAKC,QAAgBC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAI,UAGhDJ,EAAAC,EAAAC,cAACG,EAAA,KAAD,CACEC,UAAU,SACVC,cAAc,aACdC,MAAM,mBAENR,EAAAC,EAAAC,cAACG,EAAA,IAAD,KACEL,EAAAC,EAAAC,cAACG,EAAA,IAAD,KACEL,EAAAC,EAAAC,cAAA,iIAEFF,EAAAC,EAAAC,cAACG,EAAA,IAAD,CAAKI,EAAG,IACNT,EAAAC,EAAAC,cAAA,QAAMQ,SAAU/B,KAAKM,cACnBe,EAAAC,EAAAC,cAACG,EAAA,IAAD,CAAKI,EAAG,EAAGE,OAAO,MAChBX,EAAAC,EAAAC,cAACG,EAAA,UAAD,CAAWI,EAAG,GAAIb,MAAOjB,KAAKI,MAAMC,SAAU4B,eAAe,aAAaC,MAAM,eAAeC,SAAUnC,KAAKS,aAAc2B,UAAWpC,KAAKU,iBAE9IW,EAAAC,EAAAC,cAACG,EAAA,IAAD,CAAKI,EAAG,GACNT,EAAAC,EAAAC,cAACG,EAAA,OAAD,CAAQI,EAAG,GAAIO,OAAK,EAAC5C,KAAK,SAAS6C,MAAM,QAAQX,UAAU,kBAA3D,aAMNN,EAAAC,EAAAC,cAACG,EAAA,IAAD,KACEL,EAAAC,EAAAC,cAAA,KAAGI,UAAU,kBAAkB3B,KAAKJ,MAAMJ,iBArD9B+C,IAAMC,WCiBfC,EAFDC,YAfU,SAAAtC,GACtB,MAAO,CACLe,KAAMf,EAAMe,KACZ3B,MAAOY,EAAMZ,QAIU,SAAAT,GACzB,MAAO,CACL8B,QAAS,SAAAR,GFKY,IAACc,EEJpBpC,GFIoBoC,EEJD,CAAEd,WAAUe,SAAS,GFIX,SAACrC,GAClCC,MAAK,GAAAC,OAAIjB,EAAOC,QAAX,SAA2B,CAC9B0E,OAAQ,OACRC,KAAMC,KAAKC,UAAU3B,GACrBjC,QAAS,CAAEC,eAAgB,sBAC1BC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAAQF,KAAK,SAAAG,GACpCA,EAAKC,MACPT,EAAS,CAAEU,KAAMtB,EAAOqB,MAAOD,EAAKC,SAEpCT,EAAS,CAAEU,KAAMtB,EAAOqB,MAAO,KAC/BT,EAAS,CAAEU,KAAMrB,EAAYiC,SAAUd,EAAKc,SAAUe,QAAS7B,EAAK6B,mBET5DsB,CAA6C/C,oBCsC5CoD,cArDb,SAAAA,EAAYnD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+C,IACjBlD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiD,GAAA5C,KAAAH,KAAMJ,KAEDQ,MAAQ,CACX4C,QAAS,CACP7B,KAAM,GACNyB,KAAM,GACNK,KAAM,GACNC,QAAS,IAEX1D,MAAO,IAETK,EAAKS,aAAeT,EAAKS,aAAaC,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IACpBA,EAAKY,aAAeZ,EAAKY,aAAaF,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IACpBA,EAAKa,cAAgBb,EAAKa,cAAcH,KAAnBT,OAAAU,EAAA,EAAAV,CAAAD,IAdJA,4EAiBNc,GACXA,EAAMC,iBAEFZ,KAAKI,MAAM4C,QAAQJ,KAAKO,QAAU,KACpCnD,KAAKJ,MAAMwD,YAAYpD,KAAKI,MAAM4C,SAClChD,KAAKJ,MAAMyD,OAAOC,KAAK,qBAAsBtD,KAAKI,MAAM4C,SACxDhD,KAAKe,SAAS,CAAEiC,QAAS,CAAEJ,KAAM,GAAIzB,KAAM,GAAI8B,KAAM,GAAIC,QAAS,OAElElD,KAAKe,SAAS,CAAEvB,MAAO,6GAGdmB,GACXX,KAAKe,SAAS,CAAEiC,QAAS,CAAEJ,KAAMjC,EAAMK,OAAOC,MAAOE,KAAMnB,KAAKJ,MAAMuB,KAAKd,SAAU4C,KAAM,GAAIC,QAAS,4CAE5FvC,GACoB,KAA5BX,KAAKI,MAAM4C,QAAQJ,MAAiC,KAAlBjC,EAAMO,QAC1CP,EAAMC,iBACGZ,KAAKI,MAAM4C,QAAQJ,KAAKW,SAAS,MAA0B,KAAlB5C,EAAMO,SACxDP,EAAMC,kDAKR,OACES,EAAAC,EAAAC,cAAA,QAAMQ,SAAU/B,KAAKM,cACnBe,EAAAC,EAAAC,cAACG,EAAA,IAAD,CAAKI,EAAG,IACNT,EAAAC,EAAAC,cAACG,EAAA,SAAD,CAAU8B,UAAQ,EAAChE,MAAOQ,KAAKI,MAAMZ,MAAOiE,QAASzD,KAAKJ,MAAM8D,aAAcvB,SAAUnC,KAAKS,aAAc2B,UAAWpC,KAAKU,cAAeoB,EAAG,GAAII,MAAM,wBAAwByB,cAAa,IAAK1C,MAAOjB,KAAKI,MAAM4C,QAAQJ,QAE7NvB,EAAAC,EAAAC,cAACG,EAAA,IAAD,CAAKI,EAAG,GACNT,EAAAC,EAAAC,cAACG,EAAA,OAAD,CAAQI,EAAG,GAAIO,OAAK,EAAC5C,KAAK,SAAS6C,MAAM,QAAQX,UAAU,kBAA3D,mBA/CgBY,IAAMC,WCmBjBoB,EAFFlB,YAhBW,SAAAtC,GACtB,MAAO,CACLe,KAAMf,EAAMe,KACZzB,SAAUU,EAAMV,SAChBF,MAAOY,EAAMZ,QAIU,SAAAT,GACzB,MAAO,CACLqE,YAAa,SAAAJ,GACXjE,EJsDC,SAAsBiE,GAG3B,OAFAA,EAAQC,MAAO,IAAIY,MAAOC,cAEnB,CAAErE,KAAMhB,EAAcuE,WIzDhBI,CAAYJ,OAKdN,CAA6CK,GCyB3CgB,cAxCb,SAAAA,EAAYnE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+D,IACjBlE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiE,GAAA5D,KAAAH,KAAMJ,KAEDoE,YAAcnE,EAAKmE,YAAYzD,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IAHFA,mFAOjBG,KAAKJ,MAAMqE,+CAGAC,GACXA,EAAEtD,iBAEFZ,KAAKJ,MAAMyD,OAAOC,KAAK,WAAYtD,KAAKJ,MAAMuB,MAC9CnB,KAAKJ,MAAMuE,WAAWnE,KAAKJ,MAAMuB,MACjCnB,KAAKJ,MAAMyD,OAAOe,yCAGX,IAAAC,EAAArE,KACP,OAAKA,KAAKJ,MAAMuB,KAAKC,QAGnBC,EAAAC,EAAAC,cAACG,EAAA,WAAD,CAAY4C,OAAO,YAChBtE,KAAKJ,MAAM2E,MAAMC,IAAI,SAAArD,GAAI,OACvBkD,EAAKzE,MAAMuB,KAAKd,WAAac,EAAKd,SACnCgB,EAAAC,EAAAC,cAACG,EAAA,eAAD,CAAgB+C,IAAKtD,EAAKd,UACvBc,EAAKd,SACNgB,EAAAC,EAAAC,cAAA,KAAGmD,KAAK,IAAIC,QAASN,EAAKL,YAAarC,UAAU,qBAC/CN,EAAAC,EAAAC,cAACG,EAAA,KAAD,6BAGJL,EAAAC,EAAAC,cAACG,EAAA,eAAD,CAAgB+C,IAAKtD,EAAKd,UACvBc,EAAKd,aAbuBgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAI,aApB/Bc,IAAMC,WCqBfoC,EAFDlC,YAnBU,SAAAtC,GACtB,MAAO,CACLe,KAAMf,EAAMe,KACZoD,MAAOnE,EAAMmE,MACb/E,MAAOY,EAAMZ,QAIU,SAAAT,GACzB,MAAO,CACLkF,SAAU,WACRlF,ENiCwB,SAACA,GAC7BC,MAAK,GAAAC,OAAIjB,EAAOC,QAAX,UAA4B,CAC/BiB,QAAS,CAAEC,eAAgB,sBAC1BC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAAQF,KAAK,SAAAG,GACpCA,EAAKC,MACPT,EAAS,CAAEU,KAAMtB,EAAOqB,MAAOD,EAAKC,SAEpCT,EAAS,CAAEU,KAAMtB,EAAOqB,MAAO,KAC/BT,EAAS,CAAEU,KAAMnB,EAAYiG,MAAOhF,UMvCtC4E,WAAY,SAAChD,GACXpC,ENeoB,SAACoC,GAAD,OAAU,SAACpC,GACnCC,MAAK,GAAAC,OAAIjB,EAAOC,QAAX,WAA6B,CAChC0E,OAAQ,OACRC,KAAMC,KAAKC,UAAU3B,GACrBjC,QAAS,CAAEC,eAAgB,sBAC1BC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAAQF,KAAK,SAAAG,GACpCA,EAAKC,MACPT,EAAS,CAAEU,KAAMtB,EAAOqB,MAAOD,EAAKC,SAEpCT,EAAS,CAAEU,KAAMtB,EAAOqB,MAAO,KAC/BT,EAAS,CAAEU,KAAMpB,EAAagC,SAAU,GAAIe,SAAS,QMzB5C+C,CAAWhD,OAKZuB,CAA6CqB,WCqB5Cc,cAxCb,SAAAA,EAAYjF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6E,IACjBhF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+E,GAAA1E,KAAAH,KAAMJ,KAEDQ,MAAQ,CACX6C,KAAM,IAGRpD,EAAKiF,WAAajF,EAAKiF,WAAWvE,KAAhBT,OAAAU,EAAA,EAAAV,CAAAD,IAPDA,mFAWjBG,KAAK8E,kDAIL,IAAI7B,EAAO,IAAIY,KAAK7D,KAAKJ,MAAMqD,MAK3B8B,EAAS,IAAIC,KAAKC,eAAe,QAJvB,CACZC,KAAM,UAAWC,MAAO,UAAWC,IAAK,UACxCC,KAAM,UAAWC,OAAQ,UAAWC,OAAQ,YAESC,OAAOvC,GAE9DjD,KAAKe,SAAS,CAAEkC,KAAM8B,qCAItB,OACE1D,EAAAC,EAAAC,cAAA,OAAKI,UAAU,2BACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,+BACbN,EAAAC,EAAAC,cAAA,UAAKvB,KAAKJ,MAAMuB,MAChBE,EAAAC,EAAAC,cAAA,aAAQvB,KAAKI,MAAM6C,OAErB5B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iCACX3B,KAAKJ,MAAMsD,QAAW7B,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAASC,QAAS1F,KAAKJ,MAAMsD,QAASyC,KAAM,CAAEC,MAAM,IAAKC,OAAO,OAAY7F,KAAKJ,MAAMgD,cAlCnGL,IAAMC,WCiCbsD,cA/Bb,SAAAA,EAAYlG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8F,IACjBjG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgG,GAAA3F,KAAAH,KAAMJ,KAEDmG,WAAalG,EAAKkG,WAAWxF,KAAhBT,OAAAU,EAAA,EAAAV,CAAAD,IAHDA,4EAOjB,IAAImG,EAAeC,SAASC,cAAc,mBAC1CF,EAAaG,UAAYH,EAAaI,yDAItCpG,KAAK+F,0DAGL/F,KAAK+F,8CAIL,OACE1E,EAAAC,EAAAC,cAACG,EAAA,IAAD,KACG1B,KAAKJ,MAAMF,SAAS8E,IAAI,SAACxB,EAASqD,GAAV,OACvBhF,EAAAC,EAAAC,cAACG,EAAA,IAAD,CAAKI,EAAG,EAAG2C,IAAK4B,GACdhF,EAAAC,EAAAC,cAAC+E,EAAYtD,cAxBKT,IAAMC,WCkBrB+D,EAFE7D,YAhBO,SAAAtC,GACtB,MAAO,CACLe,KAAMf,EAAMe,KACZzB,SAAUU,EAAMV,SAChBF,MAAOY,EAAMZ,QAIU,SAAAT,GACzB,MAAO,CACLD,YAAa,WACXC,EAASD,QAKE4D,CAA6CoD,GC8C/CU,sBAtDb,SAAAA,EAAY5G,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwG,IACjB3G,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0G,GAAArG,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXqG,SAAUzI,EAAOE,WACjBmF,OAAQ,KACRqD,KAAM,MANS7G,mFAUC,IAAAwE,EAAArE,KACZ2G,EAAStD,IAAOrD,KAAKI,MAAMqG,UAEjCzG,KAAKJ,MAAMd,cAEX6H,EAAOrD,KAAK,YAAatD,KAAKJ,MAAMuB,MAEpCwF,EAAOC,GAAG,iBAAkB,SAAAzF,GAC1BkD,EAAKzE,MAAMiH,QAAQ1F,KAErBwF,EAAOC,GAAG,oBAAqB,SAAAzF,GAC7BkD,EAAKzE,MAAMkH,WAAW3F,KAExBwF,EAAOC,GAAG,cAAe,SAAA5D,GACvBqB,EAAKzE,MAAMmH,WAAW/D,KAExB2D,EAAOC,GAAG,iBAAkB,SAAAI,GAC1B3C,EAAKzE,MAAMqH,cAAcD,KAE3BL,EAAOC,GAAG,uBAAwB,SAAAF,GAChCrC,EAAKtD,SAAS,CAAE2F,SAChBrC,EAAKzE,MAAMsH,kBAGblH,KAAKe,SAAS,CAAEsC,OAAQsD,qCAIxB,OACEtF,EAAAC,EAAAC,cAACG,EAAA,IAAD,CAAKC,UAAU,QACbN,EAAAC,EAAAC,cAACG,EAAA,IAAD,CAAKI,EAAG,EAAGH,UAAU,iCACnBN,EAAAC,EAAAC,cAAC4F,EAAD,OAEF9F,EAAAC,EAAAC,cAACG,EAAA,IAAD,CAAKI,EAAG,EAAGH,UAAU,8BACnBN,EAAAC,EAAAC,cAAC6F,EAAD,CAAO/D,OAAQrD,KAAKI,MAAMiD,UAE5BhC,EAAAC,EAAAC,cAACG,EAAA,IAAD,CAAKI,EAAG,GAAIH,UAAU,cACpBN,EAAAC,EAAAC,cAAC8F,EAAD,CAAMhE,OAAQrD,KAAKI,MAAMiD,OAAQK,aAAc1D,KAAKI,MAAMsG,gBAhD7CnE,IAAMC,YCsBd8E,EAFF5E,YA3BW,SAAAtC,GACtB,OAAOA,GAGkB,SAAArB,GACzB,MAAO,CACL8H,QAAS,SAAC1F,GACRpC,EXkDC,SAAkBoC,GACvB,MAAO,CAAE1B,KAAMlB,EAAU4C,QWnDZ0F,CAAQ1F,KAEnB2F,WAAY,SAAC3F,GACXpC,EXmDC,SAAqBoC,GAC1B,MAAO,CAAE1B,KAAMjB,EAAa2C,QWpDf2F,CAAW3F,KAEtB4F,WAAY,SAAC/D,GACXjE,EX0DC,SAAoBiE,GACzB,MAAO,CAAEvD,KAAMf,EAAasE,WW3Df+D,CAAW/D,KAEtBlE,YAAa,WACXC,EAASD,MAEXmI,cAAe,SAACjE,GACdjE,EXqEC,SAAuBiE,GAC5B,MAAO,CAAEvD,KAAMd,EAAgBqE,WWtElBiE,CAAcjE,KAEzBkE,cAAe,WACbnI,EXuEG,CAAEU,KAAMb,OWlEJ8D,CAA6C8D,GCV3Ce,MAff,WACE,OACElG,EAAAC,EAAAC,cAACG,EAAA,IAAD,KACIL,EAAAC,EAAAC,cAACiG,EAAA,EAAD,KACEnG,EAAAC,EAAAC,cAACG,EAAA,IAAD,CAAKI,EAAG,EAAGE,OAAQ,MACjBX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOiG,KAAK,IAAIC,OAAK,EAACC,UAAWlF,KAEnCpB,EAAAC,EAAAC,cAACG,EAAA,IAAD,CAAKI,EAAG,GAAIH,UAAU,kBACpBN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOiG,KAAK,QAAQC,OAAK,EAACC,UAAWL,yDCoDlCM,kBAAgB,CAC7BzG,KAvDF,WAAsE,IAAlDf,EAAkDyH,UAAA1E,OAAA,QAAA2E,IAAAD,UAAA,GAAAA,UAAA,GAA1C,CAAExH,SAAU,GAAIe,SAAS,GAAS2G,EAAQF,UAAA1E,OAAA,EAAA0E,UAAA,QAAAC,EACpE,OAAQC,EAAOtI,MACb,KAAKrB,EAEL,KAAKC,EACH,OAAOyB,OAAOkI,OAAO,GAAI5H,EAAO,CAAEC,SAAU0H,EAAO1H,SAAUe,QAAS2G,EAAO3G,UAC/E,QACE,OAAOhB,IAiDXmE,MA7CF,WAAwC,IAApBnE,EAAoByH,UAAA1E,OAAA,QAAA2E,IAAAD,UAAA,GAAAA,UAAA,GAAZ,GAAIE,EAAQF,UAAA1E,OAAA,EAAA0E,UAAA,QAAAC,EACtC,OAAQC,EAAOtI,MACb,KAAKnB,EACH,OAAO2J,MAAMC,KAAKH,EAAOxD,OAC3B,KAAKhG,EAGH,OAFmB6B,EAAM+H,KAAK,SAAAhH,GAAI,OAAIA,EAAKd,WAAa0H,EAAO5G,KAAKd,WAE3CP,OAAAsI,EAAA,EAAAtI,CAAIM,GAE7B,GAAAnB,OAAAa,OAAAsI,EAAA,EAAAtI,CAAWM,GAAX,CAAkB2H,EAAO5G,OAC3B,KAAK3C,EACH,OAAO4B,EAAMiI,OAAO,SAAAC,GAClB,OAAOA,EAAKjI,WAAa0H,EAAO5G,KAAKd,WAEzC,QACE,OAAOD,IA+BXV,SA3BF,WAAuC,IAApBU,EAAoByH,UAAA1E,OAAA,QAAA2E,IAAAD,UAAA,GAAAA,UAAA,GAAZ,GAAIE,EAAQF,UAAA1E,OAAA,EAAA0E,UAAA,QAAAC,EACrC,OAAQC,EAAOtI,MACb,KAAKhB,EAEL,KAAKC,EACH,SAAAO,OAAAa,OAAAsI,EAAA,EAAAtI,CAAWM,GAAX,CAAkB2H,EAAO/E,UAC3B,KAAKrE,EACH,OAAOyB,EAAMoE,IAAI,SAAA+D,GAGf,OAFIA,EAAI3F,OAASmF,EAAO/E,QAAQJ,MAAQ2F,EAAItF,OAAS8E,EAAO/E,QAAQC,OAAMsF,EAAIrF,QAAU6E,EAAO/E,QAAQE,SAEhGqF,IAEX,KAAK3J,EACH,IAAI4J,EAAOP,MAAMC,KAAK9H,GAGtB,OAFAoI,EAAKC,MAEED,EACT,KAAK3J,EACH,OAAOoJ,MAAMC,KAAKH,EAAOrI,UAC3B,QACE,OAAOU,IAQXZ,MAnEF,WAAoC,IAApBY,EAAoByH,UAAA1E,OAAA,QAAA2E,IAAAD,UAAA,GAAAA,UAAA,GAAZ,GAAIE,EAAQF,UAAA1E,OAAA,EAAA0E,UAAA,QAAAC,EAClC,OAAQC,EAAOtI,MACb,KAAKtB,EACH,OAAO4J,EAAOvI,MAChB,QACE,OAAOY,MCFPsI,EAAgB,CACpBjE,IAAK,OACLkE,aAGIC,GAAkBC,YAAeH,EAAeI,qBAGvC,WACb,IAAIC,EAAQC,YAAYJ,GAAiBK,YAAgBC,MAGzD,MAAO,CAAEH,QAAOI,UAFAC,YAAaL,ICFJM,IAArBN,YAAOI,gBAEbG,IAASC,OACPlI,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAUT,MAAOA,IACf1H,EAAAC,EAAAC,cAACkI,EAAA,EAAD,CAAaC,QAAS,KAAMP,UAAWA,IACrC9H,EAAAC,EAAAC,cAACoI,EAAD,QAGJ1D,SAAS2D,eAAe","file":"static/js/main.443cf8a4.chunk.js","sourcesContent":["const config = {\n  API_URL: (process.env.NODE_ENV === 'production') ? 'https://yac-backend.herokuapp.com' : 'http://localhost:3001',\n  SOCKET_URL: (process.env.NODE_ENV === 'production') ? 'https://yac-backend.herokuapp.com' : 'http://localhost:3001'\n}\n\nexport default config\n","import config from '../config'\n\n// Acciones\nexport const ERROR = 'ERROR'\nexport const LOGIN_USER = 'LOGIN_USER'\nexport const LOGOUT_USER = 'LOGOUT_USER'\nexport const LIST_USERS = 'LIST_USERS'\nexport const ADD_USER = 'ADD_USER'\nexport const REMOVE_USER = 'REMOVE_USER'\nexport const SEND_MESSAGE = 'SEND_MESSAGE'\nexport const ADD_MESSAGE = 'ADD_MESSAGE'\nexport const UPDATE_MESSAGE = 'UPDATE_MESSAGE'\nexport const REMOVE_MESSAGE = 'REMOVE_MESSAGE'\nexport const GET_MESSAGES = 'GET_MESSAGES'\nexport const CONNECT_SOCKET = 'CONNECT_SOCKET'\nexport const DISCONNECT_SOCKET = 'DISCONNECT_SOCKET'\n\n// Creadores de acciones\nexport const loginUser = (user) => (dispatch) => {\n  fetch(`${config.API_URL}/auth`, {\n    method: 'POST',\n    body: JSON.stringify(user),\n    headers: { 'Content-Type': 'application/json' }\n  }).then(response => response.json()).then(data => {\n    if (data.error) {\n      dispatch({ type: ERROR, error: data.error })\n    } else {\n      dispatch({ type: ERROR, error: '' })\n      dispatch({ type: LOGIN_USER, nickname: data.nickname, isLogIn: data.isLogIn })\n    }\n  })\n}\n\nexport const logoutUser = (user) => (dispatch) => {\n  fetch(`${config.API_URL}/logout`, {\n    method: 'POST',\n    body: JSON.stringify(user),\n    headers: { 'Content-Type': 'application/json' }\n  }).then(response => response.json()).then(data => {\n    if (data.error) {\n      dispatch({ type: ERROR, error: data.error })\n    } else {\n      dispatch({ type: ERROR, error: '' })\n      dispatch({ type: LOGOUT_USER, nickname: '', isLogIn: false })\n    }\n  })\n}\n\nexport const getUsers = () => (dispatch) => {\n  fetch(`${config.API_URL}/users`, {\n    headers: { 'Content-Type': 'application/json' }\n  }).then(response => response.json()).then(data => {\n    if (data.error) {\n      dispatch({ type: ERROR, error: data.error })\n    } else {\n      dispatch({ type: ERROR, error: '' })\n      dispatch({ type: LIST_USERS, users: data })\n    }\n  })\n}\n\nexport function addUser (user) {\n  return { type: ADD_USER, user }\n}\n\nexport function removeUser (user) {\n  return { type: REMOVE_USER, user }\n}\n\nexport function sendMessage (message) {\n  message.date = new Date().toISOString()\n\n  return { type: SEND_MESSAGE, message }\n}\n\nexport function addMessage(message) {\n  return { type: ADD_MESSAGE, message }\n}\n\nexport const getMessages = () => (dispatch) => {\n  fetch(`${config.API_URL}/messages`, {\n    headers: { 'Content-Type': 'application/json' }\n  }).then(response => response.json()).then(data => {\n    if (data.error) {\n      dispatch({ type: ERROR, error: data.error })\n    } else {\n      dispatch({ type: ERROR, error: '' })\n      dispatch({ type: GET_MESSAGES, messages: data })\n    }\n  })\n}\n\nexport function updateMessage(message) {\n  return { type: UPDATE_MESSAGE, message }\n}\n\nexport function removeMessage() {\n  return { type: REMOVE_MESSAGE }\n}\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Button, TextInput, Card, Row, Col } from 'react-materialize'\n\nclass LoginCard extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      nickname: ''\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n  }\n  handleSubmit (event) {\n    event.preventDefault()\n\n    if (this.state.nickname) this.props.onLogin(this.state.nickname.toLowerCase())\n\n    this.setState({ nickname: '' })\n  }\n  handleChange (event) {\n    this.setState({\n      nickname: event.target.value\n    })\n  }\n  handleKeyDown (event) {\n    if (event.keyCode === 32) event.preventDefault()\n  }\n\n  render() {\n    if (this.props.user.isLogIn) return <Redirect to={'/chat'} />\n\n    return (\n      <Card\n        className=\"indigo\"\n        textClassName=\"white-text\"\n        title=\"MeltStudio Chat\"\n      >\n        <Row>\n          <Col>\n            <p>¡Hola! Bienvenido a nuestro chat, para empezar solo debes ingresar tu nombre con el cual podremos identificarte.</p>\n          </Col>\n          <Col s={12}>\n            <form onSubmit={this.handleSubmit}>\n              <Col s={6} offset=\"s2\">\n                <TextInput s={12} value={this.state.nickname} inputClassName=\"white-text\" label=\"Tu nombre...\" onChange={this.handleChange} onKeyDown={this.handleKeyDown} />\n              </Col>\n              <Col s={2}>\n                <Button s={12} large type=\"submit\" waves=\"light\" className=\"green accent-4\">\n                  Entrar\n                </Button>\n              </Col>\n            </form>\n          </Col>\n          <Col>\n            <p className=\"white red-text\">{this.props.error}</p>\n          </Col>\n        </Row>\n      </Card>\n    )\n  }\n}\n\nexport default LoginCard\n","import { connect } from 'react-redux'\nimport { loginUser } from '../redux/actions'\nimport LoginCard from '../components/LoginCard'\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    error: state.error\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogin: nickname => {\n      dispatch(loginUser({ nickname, isLogIn: true }))\n    }\n  }\n}\n\nconst Login = connect(mapStateToProps, mapDispatchToProps)(LoginCard)\n\nexport default Login\n","import React from 'react'\nimport { Col, Button, Textarea } from 'react-materialize'\n\nclass FormMessage extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      message: {\n        user: '',\n        body: '',\n        date: '',\n        youtube: ''\n      },\n      error: ''\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n\n    if (this.state.message.body.length <= 140) {\n      this.props.sendMessage(this.state.message)\n      this.props.socket.emit('sending message...', this.state.message)\n      this.setState({ message: { body: '', user: '', date: '', youtube: '' } })\n    } else {\n      this.setState({ error: 'El mensaje es muy largo, por favor reduce la cantidad de caracteres' })\n    }\n  }\n  handleChange(event) {\n    this.setState({ message: { body: event.target.value, user: this.props.user.nickname, date: '', youtube: '' } })\n  }\n  handleKeyDown(event) {\n    if (this.state.message.body === '' && event.keyCode === 32) {\n      event.preventDefault()\n    } else if (this.state.message.body.endsWith(' ') && event.keyCode === 32) {\n      event.preventDefault()\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <Col s={10}>\n          <Textarea validate error={this.state.error} success={this.props.searchFailed} onChange={this.handleChange} onKeyDown={this.handleKeyDown} s={12} label=\"Escribe un mensaje...\" data-length={140} value={this.state.message.body} />\n        </Col>\n        <Col s={2}>\n          <Button s={12} large type=\"submit\" waves=\"light\" className=\"green accent-4\">ENVIAR</Button>\n        </Col>\n      </form>\n    )\n  }\n}\n\nexport default FormMessage\n","import { connect } from 'react-redux'\nimport { sendMessage } from '../redux/actions'\nimport FormMessage from '../components/FormMessage'\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    messages: state.messages,\n    error: state.error\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    sendMessage: message => {\n      dispatch(sendMessage(message))\n    }\n  }\n}\n\nconst Form = connect(mapStateToProps, mapDispatchToProps)(FormMessage)\n\nexport default Form\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Collection, CollectionItem, Icon } from 'react-materialize'\n\nclass ListUsers extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  componentDidMount() {\n    this.props.getUsers()\n  }\n\n  handleClick (e) {\n    e.preventDefault()\n\n    this.props.socket.emit('good bye', this.props.user)\n    this.props.logoutUser(this.props.user)\n    this.props.socket.close()\n  }\n\n  render() {\n    if (!this.props.user.isLogIn) return <Redirect to={'/'} />\n\n    return (\n      <Collection header=\"Usuarios\">\n        {this.props.users.map(user =>\n          (this.props.user.nickname === user.nickname) ?\n          <CollectionItem key={user.nickname}>\n            {user.nickname}\n            <a href=\"#\" onClick={this.handleClick} className=\"secondary-content\">\n              <Icon>power_settings_new</Icon>\n            </a>\n          </CollectionItem> :\n          <CollectionItem key={user.nickname}>\n            {user.nickname}\n          </CollectionItem>\n        )}\n      </Collection>\n    )\n  }\n}\n\nexport default ListUsers\n","import { connect } from 'react-redux'\nimport { getUsers, logoutUser } from '../redux/actions'\nimport ListUsers from '../components/ListUsers'\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    users: state.users,\n    error: state.error\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUsers: () => {\n      dispatch(getUsers())\n    },\n    logoutUser: (user) => {\n      dispatch(logoutUser(user))\n    }\n  }\n}\n\nconst Users = connect(mapStateToProps, mapDispatchToProps)(ListUsers)\n\nexport default Users\n","import React from 'react'\nimport Youtube from 'react-youtube'\n\nclass Message extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      date: ''\n    }\n\n    this.formatDate = this.formatDate.bind(this)\n  }\n\n  componentDidMount() {\n    this.formatDate()\n  }\n\n  formatDate() {\n    let date = new Date(this.props.date)\n    let options = {\n      year: 'numeric', month: '2-digit', day: '2-digit',\n      hour: 'numeric', minute: 'numeric', second: 'numeric'\n    }\n    let result = new Intl.DateTimeFormat('es-CO', options).format(date)\n\n    this.setState({ date: result })\n  }\n\n  render() {\n    return (\n      <div className=\"chat__messages__message\">\n        <div className=\"chat__messages__message__up\">\n          <h6>{this.props.user}</h6>\n          <small>{this.state.date}</small>\n        </div>\n        <div className=\"chat__messages__message__down\">\n          {(this.props.youtube) ? <Youtube videoId={this.props.youtube} opts={{ width:400, height:250 }} /> : this.props.body}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Message\n","import React from 'react'\nimport { Row, Col } from 'react-materialize'\nimport Message from './Message'\n\nclass ContentMessages extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.scrollDown = this.scrollDown.bind(this)\n  }\n\n  scrollDown() {\n    let chatMessages = document.querySelector('.chat__messages')\n    chatMessages.scrollTop = chatMessages.scrollHeight\n  }\n\n  componentDidMount() {\n    this.scrollDown()\n  }\n  componentDidUpdate() {\n    this.scrollDown()\n  }\n\n  render() {\n    return(\n      <Row>\n        {this.props.messages.map((message, index) =>\n          <Col s={9} key={index}>\n            <Message {...message} />\n          </Col>\n        )}\n      </Row>\n    )\n  }\n}\n\nexport default ContentMessages\n","import { connect } from 'react-redux'\nimport { getMessages } from '../redux/actions'\nimport ContentMessages from '../components/ContentMessages'\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    messages: state.messages,\n    error: state.error\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getMessages: () => {\n      dispatch(getMessages())\n    }\n  }\n}\n\nconst Messages = connect(mapStateToProps, mapDispatchToProps)(ContentMessages)\n\nexport default Messages\n","import React from 'react'\nimport socket from 'socket.io-client'\nimport { Row, Col } from 'react-materialize'\nimport Form from '../containers/Form'\nimport Users from '../containers/Users'\nimport Messages from '../containers/Messages'\n\nimport config from '../config'\n\nimport './css/chat.css'\n\nclass RoomChat extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      endpoint: config.SOCKET_URL,\n      socket: null,\n      fail: null\n    }\n  }\n\n  componentDidMount() {\n    const client = socket(this.state.endpoint)\n\n    this.props.getMessages()\n\n    client.emit('i am here', this.props.user)\n\n    client.on('user connected', user => {\n      this.props.addUser(user)\n    })\n    client.on('user disconnected', user => {\n      this.props.removeUser(user)\n    })\n    client.on('new message', message => {\n      this.props.addMessage(message)\n    })\n    client.on('update message', update => {\n      this.props.updateMessage(update)\n    })\n    client.on('an error has ocurred', fail => {\n      this.setState({ fail })\n      this.props.removeMessage()\n    })\n\n    this.setState({ socket: client })\n  }\n\n  render() {\n    return (\n      <Row className=\"chat\">\n        <Col s={9} className=\"grey lighten-5 chat__messages\">\n          <Messages />\n        </Col>\n        <Col s={3} className=\"grey lighten-3 chat__users\">\n          <Users socket={this.state.socket} />\n        </Col>\n        <Col s={12} className=\"chat__form\">\n          <Form socket={this.state.socket} searchFailed={this.state.fail} />\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default RoomChat\n","import { connect } from 'react-redux'\nimport { addUser, removeUser, addMessage, getMessages, updateMessage, removeMessage } from '../redux/actions'\nimport RoomChat from '../components/RoomChat'\n\nconst mapStateToProps = state => {\n  return state\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addUser: (user) => {\n      dispatch(addUser(user))\n    },\n    removeUser: (user) => {\n      dispatch(removeUser(user))\n    },\n    addMessage: (message) => {\n      dispatch(addMessage(message))\n    },\n    getMessages: () => {\n      dispatch(getMessages())\n    },\n    updateMessage: (message) => {\n      dispatch(updateMessage(message))\n    },\n    removeMessage: () => {\n      dispatch(removeMessage())\n    }\n  }\n}\n\nconst Chat = connect(mapStateToProps, mapDispatchToProps)(RoomChat)\n\nexport default Chat\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Row, Col } from 'react-materialize'\nimport Login from '../containers/Login'\nimport Chat from '../containers/Chat'\n\nfunction App() {\n  return (\n    <Row>\n        <Router>\n          <Col s={6} offset={'s3'}>\n            <Route path=\"/\" exact component={Login} />\n          </Col>\n          <Col s={12} className=\"chat-container\">\n            <Route path=\"/chat\" exact component={Chat} />\n          </Col>\n        </Router>\n    </Row>\n  )\n}\n\nexport default App\n","import { ERROR, LOGIN_USER, LIST_USERS, SEND_MESSAGE, GET_MESSAGES, LOGOUT_USER, ADD_USER, REMOVE_USER, ADD_MESSAGE, UPDATE_MESSAGE, REMOVE_MESSAGE } from './actions'\nimport { combineReducers } from 'redux'\n\nfunction error (state = '', action) {\n  switch (action.type) {\n    case ERROR:\n      return action.error\n    default:\n      return state\n  }\n}\n\nfunction loginUser (state = { nickname: '', isLogIn: false }, action) {\n  switch (action.type) {\n    case LOGIN_USER:\n      return Object.assign({}, state, { nickname: action.nickname, isLogIn: action.isLogIn })\n    case LOGOUT_USER:\n      return Object.assign({}, state, { nickname: action.nickname, isLogIn: action.isLogIn })\n    default:\n      return state\n  }\n}\n\nfunction listUsers (state = [], action) {\n  switch (action.type) {\n    case LIST_USERS:\n      return Array.from(action.users)\n    case ADD_USER:\n      let alreadyExist = state.find(user => user.nickname === action.user.nickname)\n\n      if (alreadyExist) return [...state]\n\n      return [...state, action.user]\n    case REMOVE_USER:\n      return state.filter(item => {\n        return item.nickname !== action.user.nickname\n      })\n    default:\n      return state\n  }\n}\n\nfunction messages (state = [], action) {\n  switch (action.type) {\n    case SEND_MESSAGE:\n      return [...state, action.message]\n    case ADD_MESSAGE:\n      return [...state, action.message]\n    case UPDATE_MESSAGE:\n      return state.map(msg => {\n        if (msg.body === action.message.body && msg.date === action.message.date) msg.youtube = action.message.youtube\n\n        return msg\n      })\n    case REMOVE_MESSAGE:\n      let copy = Array.from(state)\n      copy.pop()\n\n      return copy\n    case GET_MESSAGES:\n      return Array.from(action.messages)\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  user: loginUser,\n  users: listUsers,\n  messages,\n  error\n})\n\n","import { applyMiddleware, createStore } from 'redux'\nimport { persistReducer, persistStore } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport thunk from 'redux-thunk'\nimport reducers from './reducers'\n\nconst persistConfig = {\n  key: 'root',\n  storage\n}\n\nconst persitedReducer = persistReducer(persistConfig, reducers)\n\n\nexport default () => {\n  let store = createStore(persitedReducer, applyMiddleware(thunk))\n  let persistor = persistStore(store)\n\n  return { store, persistor }\n}\n","// React.js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport App from './components/App'\nimport getStore from './redux/store'\n\n// Redux\nimport { Provider } from 'react-redux'\n\n// Materialize\nimport 'materialize-css/dist/js/materialize.min.js'\nimport 'materialize-css/dist/css/materialize.min.css'\n\nlet { store, persistor } = getStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}